# This workflow will build, pack and publish AdventofCode.Lib to github packages

name: Package AdventOfCode.Lib

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: csharp/AdventOfCode.Lib

    env:
      NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: GitTools
      uses: GitTools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '0.10.x'
    
       
    - name: Display GitVersion variables (without prefix)
      run: |
        echo "Major: ${{ env.major }}"
        echo "Minor: ${{ env.minor }}"
        echo "Patch: ${{ env.patch }}"
        echo "PreReleaseTag: ${{ env.preReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ env.preReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ env.preReleaseLabel }}"
        echo "PreReleaseNumber: ${{ env.preReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ env.weightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ env.buildMetaData }}"
        echo "BuildMetaDataPadded: ${{ env.buildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ env.fullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ env.majorMinorPatch }}"
        echo "SemVer: ${{ env.semVer }}"
        echo "LegacySemVer: ${{ env.legacySemVer }}"
        echo "LegacySemVerPadded: ${{ env.legacySemVerPadded }}"
        echo "AssemblySemVer: ${{ env.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ env.assemblySemFileVer }}"
        echo "FullSemVer: ${{ env.fullSemVer }}"
        echo "InformationalVersion: ${{ env.informationalVersion }}"
        echo "BranchName: ${{ env.branchName }}"
        echo "EscapedBranchName: ${{ env.escapedBranchName }}"
        echo "Sha: ${{ env.sha }}"
        echo "ShortSha: ${{ env.shortSha }}"
        echo "NuGetVersionV2: ${{ env.nuGetVersionV2 }}"
        echo "NuGetVersion: ${{ env.nuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ env.nuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ env.nuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ env.versionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ env.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ env.commitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ env.uncommittedChanges }}"
        echo "CommitDate: ${{ env.commitDate }}"

    - name: Display GitVersion variables (with prefix)
      run: |
        echo "Major: ${{ env.GitVersion_Major }}"
        echo "Minor: ${{ env.GitVersion_Minor }}"
        echo "Patch: ${{ env.GitVersion_Patch }}"
        echo "PreReleaseTag: ${{ env.GitVersion_PreReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ env.GitVersion_PreReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ env.GitVersion_PreReleaseLabel }}"
        echo "PreReleaseNumber: ${{ env.GitVersion_PreReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ env.GitVersion_WeightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ env.GitVersion_BuildMetaData }}"
        echo "BuildMetaDataPadded: ${{ env.GitVersion_BuildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ env.GitVersion_FullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ env.GitVersion_MajorMinorPatch }}"
        echo "SemVer: ${{ env.GitVersion_SemVer }}"
        echo "LegacySemVer: ${{ env.GitVersion_LegacySemVer }}"
        echo "LegacySemVerPadded: ${{ env.GitVersion_LegacySemVerPadded }}"
        echo "AssemblySemVer: ${{ env.GitVersion_AssemblySemVer }}"
        echo "AssemblySemFileVer: ${{ env.GitVersion_AssemblySemFileVer }}"
        echo "FullSemVer: ${{ env.GitVersion_FullSemVer }}"
        echo "InformationalVersion: ${{ env.GitVersion_InformationalVersion }}"
        echo "BranchName: ${{ env.GitVersion_BranchName }}"
        echo "EscapedBranchName: ${{ env.GitVersion_EscapedBranchName }}"
        echo "Sha: ${{ env.GitVersion_Sha }}"
        echo "ShortSha: ${{ env.GitVersion_ShortSha }}"
        echo "NuGetVersionV2: ${{ env.GitVersion_NuGetVersionV2 }}"
        echo "NuGetVersion: ${{ env.GitVersion_NuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ env.GitVersion_NuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ env.GitVersion_NuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ env.GitVersion_VersionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ env.GitVersion_CommitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ env.GitVersion_CommitsSinceVersionSourcePadded }}"
        echo "UncommittedChanges: ${{ env.GitVersion_UncommittedChanges }}"
        echo "CommitDate: ${{ env.GitVersion_CommitDate }}"

    - name: Pack
      run: dotnet pack --no-build --configuration Release -p:Version=${{ env.GitVersion_SemVer }}

    #- name: Push package to Github
    #  run: dotnet nuget push **/*.nupkg --no-symbols --skip-duplicate --api-key ${{secrets.NUGET_AUTH_TOKEN}}
